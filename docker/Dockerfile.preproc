FROM pavlovma007/docato-base-20200312
#FROM windj007/docato-base

##############################
# docker in docker
#ARG modprobe_path
RUN apt-get update && apt-get install -yqq ca-certificates 		openssh-client
RUN echo 'hosts: files dns' > /etc/nsswitch.conf
ENV DOCKER_CHANNEL=stable
ENV DOCKER_VERSION=19.03.8
RUN /bin/sh -c set -eux; 		apkArch="$(uname -m)"; 	case "$apkArch" in 		x86_64) dockerArch='x86_64' ;; 		armhf) dockerArch='armel' ;; 		armv7) dockerArch='armhf' ;; 		aarch64) dockerArch='aarch64' ;; 		*) echo >&2 "error: unsupported architecture ($apkArch)"; exit 1 ;;	esac; 		if ! wget -O docker.tgz "https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz"; then 		echo >&2 "error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'"; 		exit 1; 	fi; 		tar --extract 		--file docker.tgz 		--strip-components 1 		--directory /usr/local/bin/ 	; 	rm docker.tgz; 		dockerd --version; 	docker --version
ENV DOCKER_TLS_CERTDIR=/certs
RUN mkdir /certs /certs/client && chmod 1777 /certs /certs/client
#############################

# todo возможно openjdk уже не нужно, как минимум # openjdk-8-jdk
RUN apt-get update && \
	apt-get install -yqq apache2 build-essential cmake \
		pkg-config libspiro-dev libpng-dev libjpeg-dev \
        git wget libopenjp2-7-dev libfontconfig1-dev \
		libtool autoconf python python-dev libglib2.0-dev libxml2-dev \
		gettext libcairo2-dev libpango1.0-dev supervisor xvfb && \
	apt-get clean

RUN ldconfig

COPY docker/preproc_supervisord.conf /etc/supervisor/supervisord.conf

ADD docato /docato/src

ENV DISPLAY=:0
ENV C_FORCE_ROOT=1

COPY docker/preproc_entrypoint.sh /docato/entrypoint.sh
ENTRYPOINT ["/docato/entrypoint.sh"]
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]

# RUN mkdir -p /docato/thirdparty/tika/ && \
#     wget -O /docato/thirdparty/tika/tika http://www.apache.org/dyn/closer.cgi/tika/tika-app-1.18.jar

